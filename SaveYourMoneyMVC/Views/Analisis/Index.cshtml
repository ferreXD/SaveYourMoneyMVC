@using Newtonsoft.Json
@using SaveYourMoneyMVC.Common.Enums
@using SaveYourMoneyMVC.Models.Analisis
@using static SaveYourMoneyMVC.Common.Enums.Enums

@model AnalisisViewModel

@{
    Layout = "~/Views/Shared/_Layout_With_NavMenu.cshtml";
    ViewData["Language"] = @Context.User.Claims.FirstOrDefault(claim => claim.Type.Equals("Language")).Value;

    ViewData["Title"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.AnalysisTitle_Es : Resources.AnalysisTitle_En;
    ViewData["Page"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.NavMenu_Analysis_Es : Resources.NavMenu_Analysis_En;
    ViewData["Subpage"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.NavMenu_View_Es : Resources.NavMenu_View_En;

    ViewData["TypeFilter"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Filter_Type_Es : Resources.Filter_Type_En;
    ViewData["InitialDateFilter"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Filter_InitialDate_Es : Resources.Filter_InitialDate_En;
    ViewData["EndDateFilter"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Filter_EndDate_Es : Resources.Filter_EndDate_En;

    ViewData["OptionsAll"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Filter_Options_All_Es : Resources.Filter_Options_All_En;

    ViewData["ButtonClean"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Button_Clean_Es : Resources.Button_Clean_En;
    ViewData["ButtonFilter"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Button_Filter_Es : Resources.Button_Filter_En;

    ViewData["Analysis_NoData"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Analysis_NoData_Es : Resources.Analysis_NoData_En;

    var expendsType = ViewData["Language"].Equals(LANGUAGE_ES) ? EXPENDS_TYPE_ES : EXPENDS_TYPE_EN;
}

<script>
    $(document).ready(function () {
        var dictionary = @Html.Raw(JsonConvert.DeserializeObject(Model.JsonData));
        var months = @Html.Raw(JsonConvert.DeserializeObject(Model.Months));

        initAnalysisView(dictionary, months);
    })
</script>

<div class="row no-gutters breadcrumbs_container">
    <div class="col-sm-12 breadcrumbs_header m-b-10">
        <i class="fa fa-university m-r-10" aria-hidden="true"></i> @ViewData["Title"].ToString()
    </div>
    <div class="col-sm-12 breadcrumbs_page_container">
        @ViewData["Page"].ToString() <i class="fa fa-angle-right" aria-hidden="true"></i> @ViewData["Subpage"].ToString()
    </div>
</div>
<div class="charts-filtros-container">
    <form class="d-none"></form>
    <form asp-controller="Analisis" asp-action="Index" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row">
            <input type="text" asp-for="@Model.JsonData" value="@Model.JsonData" hidden/>
            <div class="form-group col-sm-12 col-md-4 col-lg-3 position-relative">
                <div class="arrow arrow-down form-input-dropdown-arrow"></div>
                <label asp-for="@Model.TipoGasto" class="control-label m-b-10">@ViewData["TypeFilter"]</label>
                <select id="Tipo" asp-for="@Model.TipoGasto" class="form-control form-input-base">
                    <option value="-1">@ViewData["OptionsAll"]</option>
                    @foreach (var value in Enum.GetValues(typeof(Enums.TipoGasto)))
                    {
                        <option value="@value">@expendsType[(int) value]</option>
                    }
                </select>
            </div>
            <div class="form-group col-sm-12 col-md-4 col-lg-3">
                <label asp-for="@Model.IntervaloInicio" class="control-label m-b-10">@ViewData["InitialDateFilter"]</label>
                <input id="IntervaloInicio" type="date" asp-for="@Model.IntervaloInicio" asp-format="{0:yyyy-MM-dd}" class="form-control form-input-base" />
                <span asp-validation-for="@Model.IntervaloInicio" class="text-danger"></span>
            </div>
            <div class="form-group col-sm-12 col-md-4 col-lg-3">
                <label asp-for="@Model.IntervaloFin" class="control-label m-b-10">@ViewData["EndDateFilter"]</label>
                <input id="IntervaloFin" type="date" asp-for="@Model.IntervaloFin" asp-format="{0:yyyy-MM-dd}" class="form-control form-input-base" />
                <span asp-validation-for="@Model.IntervaloFin" class="text-danger"></span>
            </div>
            <div class="form-group row col-12 col-lg-3 flex-evenly-center">
                <button id="clean_filters" class="col-sm-12 col-md-5 btn btn-warning m-t-30 btn-height">@ViewData["ButtonClean"]</button>
                <input type="submit" class="col-sm-12 col-md-5 btn btn-primary gastos-download-button charts-filtros-btn m-t-30 btn-height"value='@ViewData["ButtonFilter"]' />
            </div>
        </div>
    </form>
</div>

<div class="row charts-main-container flex-center-center">
    @if (Model.Dictionary.Keys.Count > 0)
    {
        <div class="col-md-12 col-lg-6">
            <figure class="highcharts-figure">
                <div id="line_container"></div>
                <p class="highcharts-description">
                </p>
            </figure>
        </div>
        <div class="col-md-12 col-lg-6">
            <figure class="highcharts-figure">
                <div id="pie_container"></div>
                <p class="highcharts-description">
                </p>
            </figure>
        </div>
    }
    else
    {
        <h1 class="col-6 text-center">@ViewData["Analysis_NoData"]</h1>
    }
</div>