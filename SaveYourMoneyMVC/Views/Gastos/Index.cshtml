@using SaveYourMoneyMVC.Common.Enums
@using SaveYourMoneyMVC.Models.Gastos
@model GastoEditViewModel

<script>
    $(document).ready(function () {
        var file_content = $("#editModal_FileContent");
        var file_name = $("#editModal_FileName");
        var file_type = $("#editModal_FileType");
        var selected_file = $("#selected_file");
        var file_input = $("#file_input");
        var file_input_label = $("#file_input_label");

        initGastosJs(file_content, file_name, file_type, selected_file, file_input, 20, file_input_label);
    });

    function setEditViewModel(id) {
        var children = id.children;

        document.getElementById("editModal_Id").value = children[0].innerText;

        var select = document.getElementById("editModal_Tipo"); 
        select.selectedIndex = indexMatchingText(select, children[1].innerText);

        document.getElementById("editModal_Created").value = formatDate(children[2].innerText);
        document.getElementById("editModal_Valor").value = parseInt(children[3].innerText);
        document.getElementById("editModal_Descripcion").value = children[4].innerText;
        document.getElementById("editModal_FileName").value = children[5].innerText;
        document.getElementById("selected_file").innerText = formatString(children[5].innerText);

        $("#editModal").modal("toggle");
    }

    function submitEditForm() {
        $("#editForm").submit();
    }

    function hideEditModal() {
        $("#editModal").modal("toggle");
    }

    function showFullComment(description) {
        $("#full_description_paragraph").text(description);
        $("#descriptionModal").modal("toggle");
    }

    function hideCommentModal() {
        $("#descriptionModal").modal("toggle");
    }

    function indexMatchingText(ele, text) {
        for (var i = 0; i < ele.length; i++) {
            if (ele[i].childNodes[0].nodeValue === text) {
                return i;
            }
        }
        return undefined;
    }

    function formatDate(date){
        var arr = date.split("/");
        return arr[2] + '-' + arr[1] + '-' + arr[0];
    }
</script>

@{
    Layout = "~/Views/Shared/_Layout_With_NavMenu.cshtml";
    ViewData["Language"] = @Context.User.Claims.FirstOrDefault(claim => claim.Type.Equals("Language")).Value;

    ViewData["Title"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.ViewExpends_Es : Resources.ViewExpends_En;
    ViewData["Page"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.NavMenu_Expends_Es : Resources.NavMenu_Expends_En;
    ViewData["Subpage"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.NavMenu_View_Es : Resources.NavMenu_View_En;

    ViewData["TableType"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_Table_Type_Es : Resources.Expends_Table_Type_En;
    ViewData["TableCreated"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_Table_Created_Es : Resources.Expends_Table_Created_En;
    ViewData["TableQuantity"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_Table_Quantity_Es : Resources.Expends_Table_Quantity_En;
    ViewData["TableDescription"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_Table_Description_Es : Resources.Expends_Table_Description_En;
    ViewData["TableFile"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_Table_File_Es : Resources.Expends_Table_File_En;
    ViewData["TableNoAttachedFile"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_Table_NoFile_Es : Resources.Expends_Table_NoFile_En;

    ViewData["EditExpend"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_Edit_Expend_Es : Resources.Expends_Edit_Expend_En;
    ViewData["DeleteExpend"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_Delete_Expend_Es : Resources.Expends_Delete_Expend_En;
    ViewData["ExpendDownloadFile"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_DownloadFile_Expend_Es : Resources.Expends_DownloadFile_Expend_En;
    ViewData["ViewDescription"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_ViewComment_Expend_Es : Resources.Expends_ViewComment_Expend_En;

    ViewData["ButtonCancel"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Button_Cancel_Es : Resources.Button_Cancel_En;
    ViewData["ButtonSave"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Button_Save_Es : Resources.Button_Save_En;
    ViewData["ButtonClose"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Button_Close_Es : Resources.Button_Close_En;

    ViewData["DownloadCSV"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Expends_DownloadCSV_Es : Resources.Expends_DownloadCSV_En;

    ViewData["TypeMessage"] = Model.MessageType;
    ViewData["DownloadMessage"] = !string.IsNullOrWhiteSpace(Model.MessageType) && Model.MessageType.ToLower().Equals("error") ? "ERROR: " + Model.PopupMessage : Model.PopupMessage;

    ViewData["Analysis_NoData"] = ViewData["Language"].Equals(LANGUAGE_ES) ? Resources.Analysis_NoData_Es : Resources.Analysis_NoData_En;

    var expendsType = ViewData["Language"].Equals(LANGUAGE_ES) ? EXPENDS_TYPE_ES : EXPENDS_TYPE_EN;
}

<div class="row no-gutters breadcrumbs_container">
    <div class="col-sm-12 breadcrumbs_header m-b-10">
        <i class="fa fa-university m-r-10" aria-hidden="true"></i> @ViewData["Title"].ToString()
    </div>
    <div class="col-sm-12 breadcrumbs_page_container">
        @ViewData["Page"].ToString() <i class="fa fa-angle-right" aria-hidden="true"></i> @ViewData["Subpage"].ToString()
    </div>
</div>

    @if(Model.GastoViewModels != null && Model.GastoViewModels.Any()){
        <div class="gastos_tabla_container">
            <div class="row gastos_tabla_header">
                <div class="col-sm-2">@ViewData["TableType"]</div>
                <div class="col-sm-2">@ViewData["TableCreated"]</div>
                <div class="col-sm-1">@ViewData["TableQuantity"]</div>
                <div class="col-sm-3">@ViewData["TableDescription"]</div>
                <div class="col-sm-2">@ViewData["TableFile"]</div>
                <div class="col-sm-2"></div>
            </div>
            <div class="gastos_tabla_content">
                @for (int i = 0; i < Model.GastoViewModels.Count(); i++)
                {
                    var id = "item_" + i.ToString();

                    <div class="row gastos_tabla_row" id="@id">
                        <div class="d-none">@Model.GastoViewModels.ElementAt(i).Id</div>
                        <div class="col-sm-2">@expendsType[(int) Model.GastoViewModels.ElementAt(i).Tipo]</div>
                        <div class="col-sm-2">@Model.GastoViewModels.ElementAt(i).Created.ToString("dd/MM/yyyy")</div>
                        <div class="col-sm-1 gastos-tabla-text-green">@Model.GastoViewModels.ElementAt(i).Valor</div>
                        <div class="col-sm-3">
                            @(!string.IsNullOrWhiteSpace(Model.GastoViewModels.ElementAt(i).Descripcion) && Model.GastoViewModels.ElementAt(i).Descripcion.Length > 20 ?
                            string.Concat(Model.GastoViewModels.ElementAt(i).Descripcion.Substring(0, 20), "...") :
                            Model.GastoViewModels.ElementAt(i).Descripcion)
                        </div>
                        <div class="col-sm-2">
                            @(!string.IsNullOrWhiteSpace(Model.GastoViewModels.ElementAt(i).FileName) ? Model.GastoViewModels.ElementAt(i).FileName.Length > 20 ? 
                            string.Concat(Model.GastoViewModels.ElementAt(i).FileName.Substring(0, 20), "...") :
                                Model.GastoViewModels.ElementAt(i).FileName : ViewData["TableNoAttachedFile"])
                        </div>
                        <div class="col-sm-2 flex-start-center">
                            <button class="fabutton m-r-10" type="button" onclick="setEditViewModel(@id)" title='@ViewData["EditExpend"]'>
                                <i class="fa-solid fa-pen-to-square table-buttons-color"></i>
                            </button>
                        <button class="fabutton m-r-10" type="button" onclick='showFullComment("@Model.GastoViewModels.ElementAt(i).Descripcion")' title='@ViewData["ViewDescription"]'>
                            <i class="fa fa-bookmark table-buttons-color"></i>
                            </button>
                            @if (!string.IsNullOrWhiteSpace(Model.GastoViewModels.ElementAt(i).FileName))
                            {
                                <a class=" m-r-10" href="@Model.GastoViewModels.ElementAt(i).FilePath" download="@Model.GastoViewModels.ElementAt(i).FileName" title='@ViewData["ExpendDownloadFile"]'>
                                    <i class="fa fa-download table-buttons-color"></i>
                                </a>
                            }
                            <form type="hidden" asp-controller="Gastos" asp-action="Delete" method="post" role="form">
                                <input id="id" name="id" value="@Model.GastoViewModels.ElementAt(i).Id" style="display: none" />
                                <button class="fabutton" type="submit" title='@ViewData["DeleteExpend"]'>
                                    <i class="fa fa-trash table-buttons-color"></i>
                                </button>
                            </form>
                        </div>
                    </div>
                }
            </div>
            <div class="gastos-download-button-container m-t-25">
                <form asp-controller="Gastos" asp-action="DownloadCsv" method="post">
                    <button class="btn btn-primary gastos-download-button" type="submit">@ViewData["DownloadCSV"]</button>
                </form>
            </div>
        </div>
    }
    else
    {
        <div class="row no-gutters flex-center-center mt-5">
            <h1 class="col-6 text-center">@ViewData["Analysis_NoData"]</h1>
        </div>
    }

<div id="editModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog form-modal-dialog" role="document">
        <div class="modal-content form-modal-body">
            <div class="modal-header form-border-custom">
                <h5 class="modal-title">@ViewData["EditExpend"]</h5>
            </div>
            <div class="modal-body">
                <form id="editForm" asp-controller="Gastos" asp-action="Update" method="post">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <input id="editModal_Id" asp-for="@Model.EditViewModel.Id" style="display: none" />
                    <div class="row">
                        <div class="form-group col-md-6 position-relative">
                            <div class="arrow arrow-down form-input-dropdown-arrow"></div>
                            <label asp-for="@Model.EditViewModel.Tipo" class="control-label m-b-10">@ViewData["TableType"]</label>
                            <select id="editModal_Tipo" asp-for="@Model.EditViewModel.Tipo" class="form-control form-input-base">
                                @foreach (var value in Enum.GetValues(typeof(Enums.TipoGasto)))
                                {
                                    <option value="@value">@expendsType[((int) value)]</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="@Model.EditViewModel.Valor" class="control-label m-b-10">@ViewData["TableQuantity"]</label>
                            <input id="editModal_Valor" asp-for="@Model.EditViewModel.Valor" type="number" placeholder="'@ViewData["TableQuantity"]" class="form-control form-input-base" />
                            <span asp-validation-for="@Model.EditViewModel.Valor" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row m-t-25">
                        <div class="form-group col-md-6">
                            <label asp-for="@Model.EditViewModel.Created" class="control-label m-b-10">@ViewData["TableCreated"]</label>
                            <input id="editModal_Created" asp-for="@Model.EditViewModel.Created" placeholder="placeholder='@ViewData["TableCreated"]'" asp-format="{0:yyyy-MM-dd}" class="form-control form-input-base" />
                            <span asp-validation-for="@Model.EditViewModel.Created" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6">
                            <label class="control-label m-b-10">@ViewData["TableFile"]</label>
                            <input type="file" id="file_input" class="d-none" />
                            <div class="flex-between-center form-input-base">
                                <p id="selected_file" class="form-input-file-text"></p>
                                <input id="file_input_label" type="button" class="btn btn-primary gastos-download-button form-input-file-padding-small" value="Buscar" />
                            </div>
                            <input id="editModal_FileName" asp-for="@Model.EditViewModel.FileName" type="text" class="d-none" />
                            <input id="editModal_FileContent" asp-for="@Model.EditViewModel.FileContent" type="text" class="d-none" />
                            <input id="editModal_FileType" asp-for="@Model.EditViewModel.FileType" type="text" class="d-none" />
                        </div>
                    </div>
                    <div class="row m-t-25">
                        <div class="form-group col-12">
                            <label asp-for="@Model.EditViewModel.Descripcion" class="control-label m-b-10">@ViewData["TableDescription"]</label>
                            <textarea id="editModal_Descripcion" asp-for="@Model.EditViewModel.Descripcion" placeholder='@ViewData["TableDescription"]' class="form-control form-input-base form-textarea-small"></textarea>
                            <span asp-validation-for="@Model.EditViewModel.Descripcion" class="text-danger"></span>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer form-border-custom">
                <button class="btn btn-primary" onclick="hideEditModal()">@ViewData["ButtonCancel"]</button>
                <button class="btn btn-success" onclick="submitEditForm()">@ViewData["ButtonSave"]</button>
            </div>
        </div>
    </div>
</div>

<div id="descriptionModal" class="modal fade" tabindex="-1" role="dialog">
    <div class="modal-dialog form-modal-dialog" role="document">
        <div class="modal-content form-modal-body">
            <div class="modal-header form-border-custom">
                <h5 class="modal-title">@ViewData["TableDescription"]</h5>
            </div>
            <div class="modal-body">
                <p id="full_description_paragraph"></p>
            </div>
            <div class="modal-footer form-border-custom">
                <button class="btn btn-primary" onclick="hideCommentModal()">@ViewData["ButtonClose"]</button>
            </div>
        </div>
    </div>
</div>

<div class="download-popup">
    <p>@ViewData["DownloadMessage"]</p>
</div>

<script>
    $(document).ready(function () {
        var init = function (popupMessage) {
            $(".gastos_tabla_row").last().addClass("gastos_tabla_last_row");

            if(popupMessage != null && popupMessage != ''){
                var type = "@Model.MessageType"

                if (type.toLowerCase() == "error") {
                    $(".download-popup").addClass("download-popup-error");
                }
                else
                    $(".download-popup").removeClass("download-popup-error");

                $(".download-popup").addClass("download-popup-show");

                setTimeout(function () {
                    $(".download-popup").removeClass("download-popup-show");
                }, 3000);
            }
        }

        init("@Model.PopupMessage");
    });
</script>